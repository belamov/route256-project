// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: queries.sql

package queries

import (
	"context"
)

const getBySku = `-- name: GetBySku :one
select count from stocks where sku=$1
`

// noinspection SqlInsertValuesForFile
func (q *Queries) GetBySku(ctx context.Context, sku int64) (int64, error) {
	row := q.db.QueryRow(ctx, getBySku, sku)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const removeReserveSku = `-- name: RemoveReserveSku :exec
update stocks set count = count+$1 where sku=$2
`

type RemoveReserveSkuParams struct {
	Count int64 `json:"count"`
	Sku   int64 `json:"sku"`
}

func (q *Queries) RemoveReserveSku(ctx context.Context, arg RemoveReserveSkuParams) error {
	_, err := q.db.Exec(ctx, removeReserveSku, arg.Count, arg.Sku)
	return err
}

const reserveSku = `-- name: ReserveSku :exec
update stocks set count = count-$1 where sku=$2
`

type ReserveSkuParams struct {
	Count int64 `json:"count"`
	Sku   int64 `json:"sku"`
}

func (q *Queries) ReserveSku(ctx context.Context, arg ReserveSkuParams) error {
	_, err := q.db.Exec(ctx, reserveSku, arg.Count, arg.Sku)
	return err
}
