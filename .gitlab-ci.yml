image: golang:1.21

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

stages:
  - check

test cart:
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: cart
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    CART_DB_NAME: cart
    CART_DB_USER: postgres
    CART_DB_PASSWORD: password
    CART_DB_HOST: postgres
    GOOSE_DRIVER: postgres
    GOOSE_DBSTRING: "user=postgres password=password host=postgres dbname=cart sslmode=disable"
  stage: check
  script:
    - go install github.com/pressly/goose/v3/cmd/goose@latest
    - cd cart
    - goose -dir internal/app/storage/migrations up
    - go test -v -coverprofile=coverage.txt -covermode count ./...
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.xml
    - cp coverage.xml ../coverageCart.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverageCart.xml

lint cart:
  stage: check
  image: golangci/golangci-lint:v1.54.2
  script:
    - cd cart
    - golangci-lint run -v

fmt cart:
  stage: check
  script:
    - go install mvdan.cc/gofumpt@latest
    - cd cart
    - test -z "$(gofumpt -d -e . | tee /dev/stderr)"

test loms:
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: cart
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    LOMS_DB_NAME: loms
    LOMS_DB_USER: postgres
    LOMS_DB_PASSWORD: password
    LOMS_DB_HOST: postgres
    GOOSE_DRIVER: postgres
    GOOSE_DBSTRING: "user=postgres password=password host=postgres dbname=loms sslmode=disable"
  stage: check
  script:
    - go install github.com/pressly/goose/v3/cmd/goose@latest
    - cd loms
    - goose -dir internal/app/storage/migrations up
    - go test -v -coverprofile=coverage.txt -covermode count ./...
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.txt > coverage.xml
    - cp coverage.xml ../coverageLoms.xml
  coverage: '/coverage: \d+.\d+% of statements/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverageLoms.xml

lint loms:
  stage: check
  image: golangci/golangci-lint:v1.54.2
  script:
    - cd cart
    - golangci-lint run -v

fmt loms:
  stage: check
  script:
    - go install mvdan.cc/gofumpt@latest
    - cd loms
    - test -z "$(gofumpt -d -e . | tee /dev/stderr)"
