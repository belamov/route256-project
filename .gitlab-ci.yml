image: golang:1.21

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'

stages:
  - check
  - build

test cart:
  stage: check
  script:
    - cd cart
    - go vet ./...
    - go test -v -race -cover ./...
  coverage: "/coverage: \d+.\d+% of statements/"


lint cart:
  stage: check
  image: golangci/golangci-lint:v1.54.2
  script:
    - cd cart
    - golangci-lint run -v

fmt cart:
  stage: check
  script:
    - go install mvdan.cc/gofumpt@latest
    - cd cart
    - test -z "$(gofumpt -d -e . | tee /dev/stderr)"

test loms:
  stage: check
  script:
    - cd loms
    - go vet ./...
    - go test -v -race ./...
  coverage: "/coverage: \d+.\d+% of statements/"

lint loms:
  stage: check
  image: golangci/golangci-lint:v1.54.2
  script:
    - cd cart
    - golangci-lint run -v

fmt loms:
  stage: check
  script:
    - go install mvdan.cc/gofumpt@latest
    - cd loms
    - test -z "$(gofumpt -d -e . | tee /dev/stderr)"

build cart:
  stage: build
  script:
    - go build ./cart/cmd/app


build loms:
  stage: build
  script:
    - go build ./loms/cmd/app
